1. 객체지향 프로그래밍 언어로 개발한 이유는 무엇인가?
A : 다양한 플랫폼에서 실행 될 수 있게 하기 위해서 >> 이식성
2. 이식성이란 무엇이며, 자바가 이식성이 뛰어난 이유는 무엇인가?
A : 다른 기종으로 프로그램을 옮기는 작업을 뜻하며, 자바는 객체 지향 프로그래밍 언어이기 떄문에 
이식성이 높다고 할 수 있으며, 여기서 객체 지향이란 프로그램 구현에 필요한 객체를 파악하고 각각의 객체들의 역할을 정해서
각 객체들간의 상호작용을 통해 프로그램을 만든 다는 뜻.  
3. 플랫폼이란 무엇인가?
A : 사전적의미로 플랫폼은 정거장, 승강장 이라는 뜻을 나타내듯 디지털 공간에서 서로 연결되어
가치를 만들어내는 체계를 뜻함.
4. 자바는 WORA 원칙에 따라 개발된 이유가 무엇인가?
A : 한번 작성된 프로그램을 다른 여러 플랫폼에서 사용할 수 있게 하기 위해서.
5. 객체 지향 프로그래밍 언어가 코드의 재사용성을 높이고 유지보수를 쉽게 만드는 이유가 무엇인가?
A : 프로그래밍 언어의 생산성과 효율성을 높이기 위해서.
6. 멀티스레딩이란 무엇인가?
A : 여러 작업을 동시에 처리할 수 있게 만들어 주는 것
7. 동적 및 정적 언어 특성이란 무엇인가?
A : 동적 언어란, 유동성을 가졌다는 뜻을 가지며, 런타임 시 결정되는 언어로
런타임까지 타입에 대한 결정을 정하지 않을 수 있기 때문에 유연성이 높다.
반대로 정적 언어는, 컴파일 시에 변수 타입이 결정되는 언어이며, 미리 타입을 결정하기 떄문에
실행 속도가 빠르다
8. 자동 메모리 관리, 가비지 컬렉션이란 무엇인가?
A : 개발자가 메모리 관리를 굳이 안해주더라도 스스로 메모리를 관리해주는 것을 뜻함,
가비지 컬렉션이란, JVM의 Heap 영역에서 동적으로 할당했던 메모리 중 필요 없게 된 메모리 객체를 모아
주기적으로 제거하는 프로세스를 뜻함.
9. 네트워크 및 분산처리란 무엇인가?
A : 다수의 컴퓨터를 네트워크로 연결, 사용자가 여러 컴퓨터에 있는 데이터를 한 컴퓨터 
시스템에 저장된 것처럼 데이터를 처리하는 기술. >> 관리가 편해질 수 있음.

1. 메모리 공간이란 무엇인가?
A : 코드(code) 데이터(data) 스택(stack) 힙(heap) 영역으로 나뉘며, 코드는 개발자가 작성한 소스코드가 저장되는 영역
데이터는 전역 변수와 정적 변수가 할당되는 영역이며, 힙 영역은 동적 변수가 할당되는 영역이고
스택 영역은 함수 호출시 생성되는 지역변수와 매개 변수가 저장되는 영역을 뜻한다.
2. 변수를 선언한다는건 무슨 의미인가?
A : 변수를 사용하기전에 변수를 사용하겠다고 알리는 것. 
마치 변수를 위해 집을 하나 만들어주고 이 변수가 보호될 수 있고, 
또한 안전하게 사용할 수 있게 만드는 일
3. 기본 자료형과 참조 자료형의 차이점은 무엇인가?
A : 기본 자료형은 int, float, char, boolean 과 같은 자료형이며, 
기본 자료형은 메모리 크기가 명확하고 변동이 없음. 참조 자료형은 
크기가 때에 따라 달라지므로 크기에 큰 의미가없음. 참조 자료형은 보통 원하는 클래스를 이용하기 위한 자료형이다.
4. 객체(Object)란 무엇인가?
A : 개발자가 구현해야할 대상으로 속성과 기능을 가지는 프로그램 단위.
5. 인스턴스란 무엇인가?
A : 클래스에 따라 메모리 상에 구현된 실체.
cf : 클래스란, 객체에 속성과 기능을 넣어줄 설계도. 
