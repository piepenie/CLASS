웹서버 , 서버, 아파치 , nginx
특징	웹 서버(Web Server)	WAS(Web Application Server)
주요 역할	정적 콘텐츠 제공	동적 콘텐츠 생성 및 비즈니스 로직 처리
처리 대상	HTML, CSS, JS, 이미지 등	데이터베이스 연동, 서버 로직 처리
예	Apache, Nginx	Tomcat, WebLogic, JBoss
작동 방식	요청된 파일 반환	요청 처리 후 응답 생성

서버 >> 요청을 주면 응답을 해주는게 서버임. 
웹서버는 html + css + js 같은거만 주는 애들

정적과 동적
정적 리소스 >> 상태가 변하지않는 
파일만 전해줄 수 있는 애들 (web server)
딱정해진 애들 

동적 
같은 html 파일인데도 바뀔 수 잇다 
파일내에서 

동기와 비동기 
동기 : 응답값을 기다림.
ex) 

비동기 : 응답값을 기다리지않고 자기할일을 한다.
ex) 회원가입을 했어 >> 그럼 그 회원한테 5천원 입금해줄래 
ajax는 axios 대표적인 예시 


응답값을 기대하는가에 따라 다르다 



import >> 클래스의 위치를 지정해주는거 

API  >> api 도 추상화의 일종
어떤 요청을 하면 어떤 대답을 해줄께 

어떤것을 사용햇을 때 어떤것을 가져오는것 
내부동작은 모르지만 url 을 입력하면 그 페이지가 뜨는것
이걸 보고 API 

자바에서 사용할 수있도록 운영체제나 
프로그래밍언어가 제공할 수있게 만든 인터페이스

커널 모드에서만 I/O 작업이 됩니다.
하드디스크에 입력과 출력을 하는게 커널에서만 가능함

인터페이스는 인스턴스화 할 수 없다
정의만 있고 구현체가없기때문에 

다형성 

기능을 제한시킨다 >> 유지보수성을 높인다.

사용방법 
