지역 변수: 메서드 내부에서만 사용.

메서드가 실행될 때 생성되고, 메서드가 종료되면 소멸.
해당 메서드나 블록 내부에서만 접근 가능.
반드시 초기화 후 사용해야 함.

public class Example {
    public void method() {
        int localVar = 10; // 지역 변수
        System.out.println(localVar); // 사용 가능
    }
}


멤버 변수: 클래스 내부에서 선언되고 객체나 클래스에 속함.

클래스의 모든 메서드에서 접근 가능.
객체가 생성될 때 값이 초기화됨(기본값).
전역 변수 또는 필드라고도 부름.

종류)
1) 인스턴스 변수: 객체별로 생성. 
객체가 생성될 때 생성되고, 객체가 소멸될 때 소멸.
클래스의 인스턴스를 통해 접근.

public class Example {
    int instanceVar = 5; // 인스턴스 변수

    public void method() {
        System.out.println(instanceVar); // 객체마다 값이 다를 수 있음
    }
}


2) 정적 변수: 클래스 전체에서 공유.
클래스 로드 시 생성되고 프로그램 종료 시 소멸.
클래스 이름으로 접근 가능(ClassName.variableName).

public class Example {
    static int staticVar = 100; // 정적 변수

    public static void main(String[] args) {
        System.out.println(Example.staticVar); // 모든 객체에서 공유
    }
}

매개변수: 메서드 호출 시 전달된 값을 임시로 저장.
메서드 내부에서만 유효.
초기화는 메서드 호출 시 외부에서 전달받은 값으로 자동으로 이루어짐.

public class Example {
    public void method(int paramVar) { // 매개변수
        System.out.println(paramVar); // 출력: 호출 시 전달된 값
    }
}

for 문 반복 : 예측이 가능한 값을 반복 출력할 때.
while 문 반복 : 예측이 좀 어려운 경우의 값을 출력할 때

for문: 반복 횟수가 명확하거나 고정적인 반복을 수행할 때.
while문: 반복 횟수가 불명확하거나 조건에 따라 유동적으로 종료해야 할 때.
do-while문: 조건에 관계없이 최소 한 번 실행해야 하는 경우
