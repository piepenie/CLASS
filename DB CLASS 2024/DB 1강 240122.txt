show databases
information_schema
- 테이블,컬럼,권한 등 메타데이터가 저장
performance_schema
- MYSQL 서버의 성능과 관련된 정보가 저장
- ex 스레드정보, LOCK Table, 쿼리 실행시간 등... 

mysql
- MYSQL 서버 자체를 관리하기 위한 스키마
- 사용자정보, 권한 및 다양한 설정정보 저장

sys
- Mysql 8.x 부터 도입된 DB
- 성능 모니터링 및 최적화를 위한 도구와 뷰를 제공

기본 명령어
실행 CMD // TUI 시작 mysql -u root -p
DB 조회 == show databases;
DB 위치로 == use mysql; (mysql = 위치)
ex) use tbl_user;
테이블 확인 == show tables; or select * from user;

DB 생성 == create database DB;
ex) create database testdb;
DB 삭제 == drop database DB;
ex) drop database testdb;
결과값 확인 == show databases;
테스트 DB로 == use testdb;

테이블 생성 create table 테이블 네임;
ex) create table tbl_user(
    -> user_id varchar(10) primary key,
    -> user_password varchar(100) not null,
    -> user_name varchar(45) not null );
테이블 생성 결과물 확인할때 >> 테이블 확인 == show tables;
테이블 내용 확인 == desc (테이블 네임);
ex) desc tbl_user;

테이블 생성 추가 해석+
주의깊게 볼것.
mysql > crate table tbl_product(prod_id int primary key,
	prod_name varchar(100) not null, prod_category varchar(10) null,
	prod_details varchar(1024) null, reg_date datetime not null,
	prod_price int not null );
== table tbl_product 를 만드는데 그 안에 column을 = prod_id int primary key,
	prod_name varchar(100) not null, prod_category varchar(10) null,
	prod_details varchar(1024) null, reg_date datetime not null,
	prod_price int not null 로 만듬 각 자료형과 제약조건을 거는 것.

cf) PK = primary key 은 모든 레코드가 서로 다른 값을 가지고 있어 각 레코드를 식별할 수 있고,
NULL값이 존재할 수 없으며 레코드의 값은 중복이 불가능하다. 또한
테이블에는 하나의 기본키만 가질 수 있지만 경우에 따라 1개 이상의 기본키를 정의할 수도 있다. (다수 열 기본 키, 복합 기본 키)
NULL = 빈칸을 의미한다.

PK / PRIMARY KEY : 해당 필드가 NOT NULL과 UNIQUE 제약 조건의 특징을 모두 가지게 됩니다.
FK / FOREIGN KEY : 하나의 테이블을 다른 테이블에 의존하게 만듭니다.
출처: https://inpa.tistory.com/entry/MYSQL-📚-기본-SQL문-정리-테이블-조회-생성-수정-삭제#db_다루기_구문 [Inpa Dev 👨‍💻:티스토리]

/* */

컬럼 추가 alter
alter table 테이블 네임 add column 추가할 칼럼 자료형 제약조건;
ex) alter table tbl_user add column user_tel varchar(30) null after user_name;
해당 컬럼 추가 확인 == desc tbl_user;
cf) 칼럼 추가 확인시 == desc (테이블 네임); 을 사용.

컬럼 삭제 alter
== alter table 테이블 네임 drop 삭제할 칼럼 네임;
ex) alter table tbl_user drop user_password;
해당 컬럼 삭제 확인 == desc tbl_user;

cf) 컬럼 추가 삭제 추가 해석+
alter table tbl_product add column amonut int not null; > tbl_prodcut 테이블에 컬럼 amount 를 추가
alter table tbl_product change column prod_price prod_price varchar(100) null;

tbl_product 테이블에 컬럼 prod_price 를 prod_price varchar(100)/*변경자료형*/ null/*제약조건*/ 로 변경
alter table tbl_product drop prod_details > tbl_product 테이블에 prod_details 를 삭제 

칼럼 수정 alter
alter table 테이블 네임 change column 수정할 칼럼 네임 수정될 칼럼 네임 자료형 제약조건;
ex)alter table tbl_user change column user_tel user_phone varchar(100) not null;
해당 컬럼 수정 확인 == desc tbl_user;

/* */

값 삽입
insert into 테이블 위치(칼럼 위치,칼럼 위치,칼럼 위치) values('값','값','값');
ex)insert into testdb.tbl_user(user_id,user_name,user_phone)
values('user10','홍길동','010-222-3333');
해당 테이블 값 삽입 확인 select user_id,user_name from tbl_user;
cf) 테이블 확인 select * from 테이블 네임;
테이블 부분 확인 select 칼럼, 칼럼 from 테이블 네임;
or select * from 테이블 네임;

값 수정
update 테이블 네임 set 수정할 칼럼='값' where 수정 할 칼럼 = '값'; 
update tbl_user set user_name='철수' where user_id='user20';
select * from tbl_user;

값 삭제
delete from 테이블 네임 where 칼럼 = '삭제 해당 값';
ex) delete from tbl_user where user_id='user10';
select * from tbl_user;







